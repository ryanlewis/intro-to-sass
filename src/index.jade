doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Intro to SASS

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    // endbuild

  body

    article

      section
        h1  SASS Tips and Tricks

      section
        h2 Please...
        p
          | Don't wait until the end - engage everyone!

      section
        h2 Goals
        ul
          li Speed up development
          li Cleaner, more expressive CSS
          li Show you some neat tricks

      section
        h2 Placeholders

        p First of all, why?

        table
          tr
            td
              pre: code.language-scss.
                .alert {
                  border-radius: 4px;
                  display: block;
                }

                .alert-success {
                  @extend .alert;
                  color: green;
                }

                .alert-warning {
                  @extend .alert;
                  color: red;
                }
            td
              pre: code.language-css.
                .alert, .alert-success, .alert-warning {
                  border-radius: 4px;
                  display: block;
                }

                .alert-success {
                  color: green;
                }

                .alert-warning {
                  color: red;
                }
        p Will we ever use <code>.alert</code> ?

      section
        h2 Placeholders
        h3 Rewritten as placeholders (%)

        table
          tr
            td
              pre: code.language-scss.
                %alert {
                  border-radius: 4px;
                  display: block;
                }

                .alert-success {
                  @extend %alert;
                  color: green;
                }

                .alert-warning {
                  @extend %alert;
                  color: red;
                }
            td
              pre: code.language-css.
                .alert-success, .alert-warning {
                  border-radius: 4px;
                  display: block;
                }

                .alert-success {
                  color: green;
                }

                .alert-warning {
                  color: red;
                }

      section
        h2 Placeholders
        h3 A better example?
        table
          tr
            td
              pre: code.language-scss.
                // no margin, no padding
                %mp0 {
                 margin: 0;
                 padding: 0;
                }

                .container {
                  @extend %mp0;
                }

                .my-list li {
                  @extend %mp0;
                  font-size: 1.25em;
                }
            td
              pre: code.language-css.
                .container, .my-list li {
                  margin: 0;
                  padding: 0;
                }

                .my-list li {
                  font-size: 1.25em;
                }
        p Can you think of a better one?


      section
        h2 Ampersand &amp;
        h3 Reference the parent selector

        table
          tr
            td
              pre
                code.language-scss.
                  li {
                    border-bottom: 1px solid $color-gray;
                    &:last-child {
                      border-bottom: none;
                    }
                  }

                  a {
                    text-decoration: none;
                    &:hover {
                      text-decoration: underline;
                    }
                  }
            td
              pre
                code.language-css.
                  li {
                    border-bottom: 1px solid #cccccc;
                  }
                  li:last-child {
                    border-bottom: none;
                  }

                  a {
                    text-decoration: none;
                  }
                  a:hover {
                    text-decoration: underline;
                  }
        p This is useful for other pseudo-elements, such as <code>:nth-child(even)</code>

      section
        h2 Ampersand &amp;
        h3 Reference the parent selector
        p A nice use-case.
        table
          tr
            td
              pre
                code.language-scss.
                  h3 {
                    font-size: 24px;

                    .ppc-page & {
                      font-size: 36px;
                    }
                  }
            td
              pre
                code.language-css.
                  h3 {
                    font-size: 24px;
                  }
                  .ppc-page h3 {
                    font-size: 36px;
                  }
        p Map styles for specific sections within your site
      section
        h2 Ampersand &amp;
        h3 Even cooler example

        pre: code.language-markup.
          &lt;!--[if lt IE 7]&gt;      &lt;html class=&quot;no-js lt-ie9 lt-ie8 lt-ie7&quot;&gt; &lt;![endif]--&gt;
          &lt;!--[if IE 7]&gt;         &lt;html class=&quot;no-js lt-ie9 lt-ie8&quot;&gt; &lt;![endif]--&gt;
          &lt;!--[if IE 8]&gt;         &lt;html class=&quot;no-js lt-ie9&quot;&gt; &lt;![endif]--&gt;
          &lt;!--[if gt IE 8]&gt;&lt;!--&gt; &lt;html class=&quot;no-js&quot;&gt; &lt;!--&lt;![endif]--&gt;

        table
          tr
            td: pre: code.language-scss.
              .super-title {
                font-size: 32px;

                .lte-i9 & {
                  font-size: 36px;
                }
              }
            td: pre: code.language-css.
              .super-title {
                font-size: 32px;
              }
              .lte-i9 .super-title {
                font-size: 36px;
              }
        p Question: what's the catch with this approach?

      section
        h2 Mixins
        h3 Include styles in your selectors
        p We were <strong>extending</strong> before. Sometimes we just want to include styles

        p Written by Dave Sellers

        pre: code.language-scss.
          @mixin image-2x($image) {
            width: image-width($image)/2;
            height: image-height($image)/2;
            background-size: image-width($image)/2;
          }
        

      section
        h2 Mixins
        h3 A retina image mixin

        pre: code.language-scss(style='font-size:0.5em; line-height: 0em').
          @mixin image2x-retina($file, $type, $width, $height, $mod: '@2x') {
            $fileName: $file + '.' + $type;
            $retina: $file + $mod + '.' + $type;

            background-image: url($fileName);
            
            @media (-webkit-min-device-pixel-ratio: 1.5), (-moz-min-device-pixel-ratio: 1.5) {
              & {
                background-image: url($retina);
                background-size: $width $height;
              }
            }
          }

          // Example
          #foo {
            @include image2x-retina('foobar', 'png', 10px, 20px);
            background: repeat;
          }

        p: a(href='https://gist.github.com/ryanlewis/11231156') View output

      section
        h2 Lists and loops
        h3 Do iterations, or loop through lists
        p Why? Use cases?

      section
        h2 List and loops
        p Something Dave Sellers wrote

        table: tr
          td
            - var $icon = '#{$icon}'
            pre: code.language-scss(style='font-size:0.5em; line-height: 0em').
              @mixin image-2x($image) {
                width: image-width($image)/2;
                height: image-height($image)/2;
                background-size: image-width($image)/2;
              }

              $icons: marker, pump, mail, tick;

              @each $icon in $icons {
                .icon-#{$icon} {
                  position: absolute;
                  display: block;
                  background-position: 50% 50%;
                  background-repeat: no-repeat;
                  @include image-2x('2x/#{$icon}.png');
                }
              }

          td
            pre: code.language-scss(style='font-size:0.5em; line-height: 0em').
              .icon-marker {
                position: absolute;
                display: block;
                background-position: 50% 50%;
                background-repeat: no-repeat;
                width: 27px;
                height: 45px;
                background-size: 27px;
              }
              .icon-pump {
                position: absolute;
                display: block;
                background-position: 50% 50%;
                background-repeat: no-repeat;
                width: 33px;
                height: 41px;
                background-size: 33px;
              }
              /* ... */

      section
        h2 A more complex example
        p: a(href='http://codepen.io/ryanlewis/pen/xBJGA') Something I made earlier...

      section
        h2 A more complex example
        p This is a SASS function that takes 3 arguments (one optional) and returns a number

        pre: code.language-scss.
          @function nth-origin($total, $n, $amount: 50px) {
            $i: $n - 1;
            $mid: ($total - 1) / 2;
            $offset:  $i - $mid;
            @return $offset * $amount * -1;
          }

        p.
          This returns a number that is negative or positive, dependant on the
          value of <code>$n</code> and <code>$total</code>

      section
        h2 A more complex example

        p The result is then fed into the <code>transform-origin</code> compass mixin

        pre: code.language-scss. @include transform-origin(nth-origin($image-count, $i, 120px));

        p Depending on the value of <code>$i</code>, the <code>transform-origin</code> will be different

      section
        h2 A more complex example
        h3 This output is then looped to produce different selectors

        table: tr
          td
            - var $i = '#{$i}'
            pre: code(class='language-scss', style='font-size: 0.5em').
              $image-count: 6;
              img {
                opacity:0;
                @for $i from 1 through $image-count {
                  &:nth-of-type( #{$i} ) {
                    @include transform-origin(
                      nth-origin($image-count, $i, 120px)
                    );
                    @include animation(
                      fadeIn 1.5s 0.1s*$i forwards cubic-bezier(0,0.8,0.4,1)
                    );
                  }
                }
              }
          td
            pre: code(class='language-scss', style='font-size: 0.5em').
              img {
                opacity: 0;
              }
              img:nth-of-type(1) {
                /* vendor prefixed */
                transform-origin: 300px;
                animation: fadeIn 1.5s 0.1s ...;
              }
              img:nth-of-type(2) {
                /* vendor prefixed */
                transform-origin: 180px;
                animation: fadeIn 1.5s 0.2s ...;
              }
              /* ... */

      section
        h2 Fin!
        p Can any of this be used in future projects?



    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild
